(ert-deftest test-tcel-generator-call-gen ()
  (should (equal 1 (tcel-generator-call-gen (tcel-generator-gen-pure 1) nil nil))))


(ert-deftest test-tcel-generator-rand-range ()
  (let ((rnd (tcel-generator-random 42))	(result (list)))
    (should (equal '(42 13 29 23 26 38 48 42 47 30)
		   (dotimes (_ 10 result)
		     (setq result (cons (tcel-generator-rand-range rnd 10 50) result)))))))


(ert-deftest test-tcel-generator-choose ()
  (should (equal '(19 13 17 13 18 16 18 18 11 17)
		 (tcel-generator-sample (tcel-generator-choose 10 20)))))
	     
    
	     
(ert-deftest test-tcel-generator-elements ()
    (should (equal '(:d :b :c :b :c :c :c :d :a :c)
		   (tcel-generator-sample (tcel-generator-elements '(:a :b :c :d))))))


(ert-deftest test-tcel-generator-such-that ()

      (should (equal '(:d :c  :c :c :c :d :a :c :d :c)
		   (tcel-generator-sample (tcel-generator-such-that 
				 (lambda (a) (not (equal a :b)))
				 (tcel-generator-elements '(:a :b :c :d))
				 9)))))

(ert-deftest test-tcel-generator-boolean ()

      (should (equal '(nil t nil t nil nil nil nil t nil)
		   (tcel-generator-sample (tcel-generator-boolean)))))

(ert-deftest test-tcel-generator-int ()
      (should (equal '(0 0 1 -1 2 1 3 4 -6 3)
		   (tcel-generator-sample (tcel-generator-int)))))



(ert-deftest test-tcel-generator-tuple ()
      (should (equal '((0 t)
		       (1 t)
		       (1 nil)
		       (2 nil)
		       (-3 nil)
		       (4 nil)
		       (-4 nil)
		       (3 nil)
		       (4 t)
		       (-1 nil))
		   (tcel-generator-sample (tcel-generator-tuple (tcel-generator-int) (tcel-generator-boolean))))))

(ert-deftest test-tcel-generator-nat ()
      (should (equal '(0 0 1 1 2 1 3 4 6 3)
		   (tcel-generator-sample (tcel-generator-nat)))))



(ert-deftest test-tcel-generator-pos-int ()
      (should (equal '(0 0 1 1 2 1 3 4 6 3)
		   (tcel-generator-sample (tcel-generator-pos-int)))))


(ert-deftest test-tcel-generator-neg-int ()
      (should (equal '(0 0 -1 -1 -2 -1 -3 -4 -6 -3)
		   (tcel-generator-sample (tcel-generator-neg-int)))))

(ert-deftest test-tcel-generator-s-pos-int ()
      (should (equal '(1 1 2 2 3 2 4 5 7 4)
		   (tcel-generator-sample (tcel-generator-s-pos-int)))))


(ert-deftest test-tcel-generator-s-neg-int ()
      (should (equal '(-1 -1 -2 -2 -3 -2 -4 -5 -7 -4)
		   (tcel-generator-sample (tcel-generator-s-neg-int)))))
